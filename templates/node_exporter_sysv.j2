#!/bin/bash
#
# node_exporter	Start up Prometheus node_exporter
#
# chkconfig: 2345 55 25
# description: Prometheus exporter for hardware and OS metrics exposed by *NIX kernels,\
#               written in Go with pluggable metric collectors.
#
# processname: node_exporter
# config: /etc/node_exporter/config.yaml

### BEGIN INIT INFO
# Provides: node_exporter
# Required-Start: $local_fs $network $syslog
# Required-Stop: $local_fs $syslog
# Should-Start: $syslog
# Should-Stop: $network $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start up Prometheus node_exporter
# Description:       Prometheus exporter for hardware and OS metrics exposed by *NIX kernels,
#		                 written in Go with pluggable metric collectors.
### END INIT INFO


RETVAL=0
PROG="node_exporter"
EXEC="{{ _node_exporter_binary_install_dir }}/$PROG"
LOCKFILE="/var/lock/subsys/$PROG"
LOGFILE="{{ node_exporter_log_file }}"

# pull in sysconfig settings
[ -f /etc/sysconfig/node_exporter ] && . /etc/sysconfig/node_exporter

# Source function library.
if [ -f /etc/rc.d/init.d/functions ]; then
  . /etc/rc.d/init.d/functions
else
  echo "/etc/rc.d/init.d/functions does not exist"
  exit 0
fi

start() {
  if [ -f $LOCKFILE ]
  then
    echo "$PROG is already running!"
  else
    echo -n "Starting $PROG: "
    nohup $EXEC $OPTIONS >${LOGFILE} 2>&1 &
    RETVAL=$?
    [ $RETVAL -eq 0 ] && touch $LOCKFILE && success || failure
    echo
    return $RETVAL
  fi
}

stop() {
  echo -n "Stopping $PROG: "
  killproc $EXEC
  RETVAL=$?
  [ $RETVAL -eq 0 ] && rm -r $LOCKFILE && success || failure
  echo
}

restart ()
{
  stop
  sleep 1
  start
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status $PROG
    ;;
  restart)
    restart
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
esac
exit $RETVAL
